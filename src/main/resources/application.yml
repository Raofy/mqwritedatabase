
spring:

  jackson:                                 # Jackson序列化配置
    property-naming-strategy: SNAKE_CASE   # 设置属性命名策略,SNAKE_CASE-返回的json驼峰式转下划线，json body下划线传到后端自动转驼峰式
    date-format: yyyy-MM-dd HH:mm:ss       # 全局设置@JsonFormat的格式pattern
    time-zone: GMT+8                       # 设置时区

  datasource:
    druid:
      url:  jdbc:mysql://localhost:3306/test-mqwrite?useUnicode=true&characterEncoding=utf-8&useSSL=false
      username: root
      password: 123456
      driver-class-name: com.mysql.jdbc.Driver
      initial-size: 2                                             # 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      max-active: 5                                               # 最大连接池数量
      max-wait: 60000                                             # 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      min-idle: 1                                                 # 最小连接池数量
      time-between-eviction-runs-millis: 600000                   # 有两个含义： 1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
      min-evictable-idle-time-millis: 300000                      # 连接保持空闲而不被驱逐的最小时间
      test-while-idle: true                                       # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-on-borrow: true                                        # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false                                       # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      pool-prepared-statements: false                             # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      max-open-prepared-statements: 20                            # 打开PSCache，并且指定每个连接上PSCache的大小
      validation-query: SELECT 1                                  # 用来检测连接是否有效的sql，要求是一个查询语句，常用select ‘x’。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
      validation-query-timeout: 500                               # 单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
      filters: stat                                               # 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有： 监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall

      stat-view-servlet:                                          # 配置druid监控
       enabled: true
       url-pattern: /druid/*                                      # 访问地址规则
       reset-enable: true                                         # 是否允许清空统计数据
       login-username: admin                                      # 监控页面的登录账户
       login-password: admin                                      # 监控页面的登录密码


mybatis:
  mapper-locations: classpath:mapper/*Mapper.xml
  configuration:
    map-underscore-to-camel-case: true

mybatis-plus:                                                     # mybatis-plus日志打印配置
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      #logic-delete-field: flag  # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 1                                       # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0                                   # 逻辑未删除值(默认为 0)